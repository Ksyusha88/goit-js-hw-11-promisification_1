{"version":3,"sources":["webpack:///./js/task2.promis.js"],"names":["users","name","active","toggleUserState","allUsers","userName","Promise","resolve","map","user","logger","updatedUsers","console","table","then"],"mappings":"yLAGMA,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAAAC,GAIXA,EAHiBH,EAASI,KAAI,SAAAC,GAAI,OAClCA,EAAKR,OAASI,EAAd,iBAA8BI,EAA9B,CAAoCP,QAASO,EAAKP,SAAWO,UAenEC,EAAS,SAAAC,GAAY,OAAIC,QAAQC,MAAMF,IAK7CR,EAAgBH,EAAO,SACvBG,EAAgBH,EAAO,OAKvBG,EAAgBH,EAAO,SAASc,KAAKJ,GACrCP,EAAgBH,EAAO,OAAOc,KAAKJ,K","file":"main.d1ee3ab1cc07f0ce3a16.js","sourcesContent":["// Перепиши функцию toggleUserState() так, чтобы она не использовала callback-функцию callback,\r\n// а принимала всего два параметра allUsers и userName и возвращала промис.\r\n\r\nconst users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n    return new Promise(resolve => {\r\n        const updatedUsers = allUsers.map(user =>\r\n            user.name === userName ? { ...user, active: !user.active } : user,\r\n            );\r\n            resolve(updatedUsers);\r\n    });\r\n};\r\n\r\n// const toggleUserState = (allUsers, userName, callback) => {\r\n//   const updatedUsers = allUsers.map(user =>\r\n//     user.name === userName ? { ...user, active: !user.active } : user,\r\n//   );\r\n\r\n//   callback(updatedUsers);\r\n\r\n// };\r\n\r\nconst logger = updatedUsers => console.table(updatedUsers);\r\n\r\n/*\r\n * Сейчас работает так\r\n */\r\ntoggleUserState(users, 'Mango', logger);\r\ntoggleUserState(users, 'Lux', logger);\r\n\r\n/*\r\n * Должно работать так\r\n */\r\ntoggleUserState(users, 'Mango').then(logger);\r\ntoggleUserState(users, 'Lux').then(logger);"],"sourceRoot":""}